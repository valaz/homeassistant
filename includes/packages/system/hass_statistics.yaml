hass_statistics:
  input_number:
    automations_triggers_counter:
      name: Automations Triggers Counter
      min: 0
      max: 999999
      step: 1

  automation:
    - alias: "[HASS] Count Automation Trigger"
      trigger:
        - platform: event
          event_type: automation_triggered
      action:
        - service: input_number.set_value
          target:
            entity_id: input_number.automations_triggers_counter
          data:
            value: "{{ states('input_number.automations_triggers_counter') | int + 1 }}"

    - alias: "[HASS] Reset Automation Trigger Counter"
      trigger:
        - platform: time
          at: "00:00:00"
      action:
        - service: input_number.set_value
          target:
            entity_id: input_number.automations_triggers_counter
          data:
            value: "{{ 0 }}"
  sensor:
    - platform: template
      sensors:
        #----- Count Automations
        count_automations:
          # entity_id: sensor.date
          value_template: "{{ states.automation | list | length }}"
          unit_of_measurement: ""
        #----- Count Scripts
        count_scripts:
          # entity_id: sensor.date
          value_template: "{{ states.script| list | length }}"
          unit_of_measurement: ""
        #----- Count Device Trackers
        count_device_trackers:
          # entity_id: sensor.date
          value_template: "{{ states.device_tracker | list | length }}"
          unit_of_measurement: ""
        #----- Count Binary Sensors
        count_binary_sensors:
          # entity_id: sensor.date
          value_template: "{{ states.binary_sensor| list | length }}"
          unit_of_measurement: ""
        #----- Count Sensors
        count_sensors:
          # entity_id: sensor.date
          value_template: "{{ states.sensor | list | length }}"
          unit_of_measurement: ""
        #----- Count Switches
        count_switches:
          # entity_id: sensor.date
          value_template: "{{ states.switch | list | length }}"
          unit_of_measurement: ""
        #----- Count Switches
        count_lightes:
          # entity_id: sensor.date
          value_template: "{{ states.light | list | length }}"
          unit_of_measurement: ""
        #----- Count Zones
        count_zones:
          # entity_id: sensor.date
          value_template: "{{ states.zone | list | length }}"
          unit_of_measurement: ""
        #----- Input Booleans
        count_input_booleans:
          # entity_id: sensor.date
          value_template: "{{ states.input_boolean | list | length }}"
          unit_of_measurement: ""
        #----- Input Numbers
        count_input_numbers:
          # entity_id: sensor.date
          value_template: "{{ states.input_number | list | length }}"
          unit_of_measurement: ""
        #----- Input Texts
        count_input_texts:
          # entity_id: sensor.date
          value_template: "{{ states.input_text | list | length }}"
          unit_of_measurement: ""
        #----- Input Selects
        count_input_selects:
          # entity_id: sensor.date
          value_template: "{{ states.input_select | list | length }}"
          unit_of_measurement: ""
        #----- Input Date Times
        count_input_datetimes:
          # entity_id: sensor.date
          value_template: "{{ states.input_datetime | list | length }}"
          unit_of_measurement: ""
