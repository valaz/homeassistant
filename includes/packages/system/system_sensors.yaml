system_sensors:
  recorder:
    db_url: !secret db_link
    purge_keep_days: 7
    auto_purge: true
    exclude:
      domains:
        - camera
  #   include:
  #     entities:
  #       - binary_sensor.rpi_power_status
  #       - sensor.processor_use
  #       - sensor.disk_use_percent
  #       - sensor.memory_use_percent
  #       - sensor.disk_free
  #       - sensor.processor_temperature
  #       - sensor.home_assistant_v2_db
  #       - sensor.maria_db

  homeassistant:
    customize:
      sensor.processor_use:
        friendly_name: Загрузка процессора
      sensor.disk_use_percent:
        friendly_name: Использование диска
      sensor.disk_free:
        friendly_name: Свободно на диске
      sensor.processor_temperature:
        friendly_name: Температура процессора
      sensor.memory_use_percent:
        friendly_name: Использование ОЗУ
      sensor.home_assistant_v2_db:
        friendly_name: Объем базы HA
      sensor.maria_db:
        friendly_name: Объем базы Maria DB
      sensor.online_custom:
        friendly_name: Home Assistant в онлайне
      sensor.last_boot_custom:
        friendly_name: Сервер в онлайне
      sensor.custom_time:
        friendly_name: Текущее время

  sensor:
    - platform: template
      sensors:
        c_uptime_server:
          friendly_name: "Server Uptime"
          icon_template: mdi:clock-time-two-outline
          value_template: >
            {% set uptime_seconds = (now() - (states('sensor.last_boot') | as_datetime)).total_seconds() %}
            {{ timedelta(seconds=uptime_seconds) }}
        c_uptime_system:
          friendly_name: "System Uptime"
          icon_template: mdi:clock-time-two-outline
          value_template: >
            {% set uptime_seconds = (now() - (states('sensor.online') | as_datetime)).total_seconds() %}
            {{ timedelta(seconds=uptime_seconds) }}

    - platform: time_date
      display_options:
        - "time"
        - "date"
        - "date_time"
        - "time_date"

  template:
    - trigger:
        - platform: time_pattern
          seconds: "/30"
      sensor:
        - name: time_1_sec
          state: "{{ as_timestamp(now()) | round(default=0)}}"

    - sensor:
        - name: custom_time
          state: >
            {{states("sensor.time_1_sec") | int | timestamp_custom("%H:%M:%S") }}
        # Время с последней перезагрузки Home Assistant
        - name: online_custom
          state: >
            {% set s = (states("sensor.time_1_sec") | int - as_timestamp(states('sensor.online')) | int) %}
            {{ '{:d} дн. {:02d}:{:02d}:{:02d}'.format (s // 86400, s % 86400 // 3600, s % 3600 // 60, s % 60) }}

        # Время с последней перезагрузки сервера
        - name: last_boot_custom
          state: >
            {% set s = (states("sensor.time_1_sec") | int - as_timestamp(states('sensor.last_boot')) | int) %}
            {{ '{:d} дн. {:02d}:{:02d}:{:02d}'.format (s // 86400, s % 86400 // 3600, s % 3600 // 60, s % 60) }}
